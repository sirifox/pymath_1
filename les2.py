# *Задание 1*
# Дан список с визитами по городам и странам. Напишите код, который возвращает отфильтрованный список geo_logs, содержащий только визиты из России. Считайте, что список geo_logs легко помещается в оперативной памяти.
geo_logs = [
    {'visit1': ['Москва', 'Россия']},
    {'visit2': ['Дели', 'Индия']},
    {'visit3': ['Владимир', 'Россия']},
    {'visit4': ['Лиссабон', 'Португалия']},
    {'visit5': ['Париж', 'Франция']},
    {'visit6': ['Лиссабон', 'Португалия']},
    {'visit7': ['Тула', 'Россия']},
    {'visit8': ['Тула', 'Россия']},
    {'visit9': ['Курск', 'Россия']},
    {'visit10': ['Архангельск', 'Россия']},
]


for val in geo_logs:
  geo_logs = [logs for logs in geo_logs if list(logs.values())[0][1].lower() == 'россия']

print(geo_logs)

# *Задание 2*
# Выведите на экран все уникальные гео-ID из значений словаря ids. Т. е. список вида [213, 15, 54, 119, 98, 35]
ids = {'user1': [213, 213, 213, 15, 213], 'user2': [54, 54, 119, 119, 119], 'user3': [213, 98, 98, 35]}

uniq_ids = []
for el in list(ids.values()):
  uniq_ids.extend(el)

print(list(set(uniq_ids)))

# *Задание 3*
# Список поисковых запросов. Получить распределение количества слов в них. Т. е. поисковых запросов из одного слова 5%, из двух - 7%, из трех - 3% итд.
queries = [
    'смотреть сериалы онлайн',
    'новости спорта',
    'афиша кино',
    'курс доллара',
    'сериалы этим летом',
    'курс по питону',
    'сериалы про спорт',
]

len_dict = {}
for item in queries:
  len_val = len(item.split())
  if len_val not in len_dict.keys():
    len_dict[len_val] = 1
  else:
    len_dict[len_val] += 1

for key, val in len_dict.items():
  if key == 1:
    print('Запросов из {} слова {} %'.format(key, round(val / len(queries) * 100, 2)))
  else:
    print('Запросов из {} слов {} %'.format(key, round(val / len(queries) * 100, 2)))

# *Задание 4*
# Дана статистика рекламных каналов по объемам продаж. Напишите скрипт, который возвращает название канала с максимальным объемом.
# Т. е. в данном примере скрипт должен возвращать 'yandex'.
stats = {'facebook': 55, 'yandex': 120, 'vk': 115, 'google': 99, 'email': 42, 'ok': 98}

max_value = max(stats.values())

for key in stats.keys():
  if stats[key] == max_value:
    print(key)

# *Задание 5*
# Дан поток логов по количеству просмотренных страниц для каждого пользователя. Список отсортирован по ID пользователя. Вам необходимо написать алгоритм, который считает среднее значение просмотров на пользователя. Т. е. надо посчитать отношение суммы всех просмотров к количеству уникальных пользователей. Учтите, что весь список stream не помещается в оперативную память, т. е. его нужно обрабатывать поэлементно в цикле.
stream = [
    '2018-01-01,user1,3',
    '2018-01-07,user1,4',
    '2018-03-29,user1,1',
    '2018-04-04,user1,13',
    '2018-01-05,user2,7',
    '2018-06-14,user3,4',
    '2018-07-02,user3,10',
    '2018-03-21,user4,19',
    '2018-03-22,user4,4',
    '2018-04-22,user4,8',
    '2018-05-03,user4,9',
    '2018-05-11,user4,11',
]

len_dict = {}
sum_dict = {}
for item in stream:
  len_val = item.split(",")[1]
  if len_val not in len_dict.keys():
    len_dict[len_val] = 1
  else:
    len_dict[len_val] += 1
  if len_val not in sum_dict.keys():
    sum_dict[len_val] = int(item.split(",")[2])
  else:
    sum_dict[len_val] += int(item.split(",")[2])

for key in sum_dict:
  print('среднее по пользователю {} = {}'.format(key, sum_dict[key] / len_dict[key]))
