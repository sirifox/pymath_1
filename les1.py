# Даны 2 строки long_phrase и short_phrase. Напишите код, который проверяет действительно ли длинная фраза long_phrase длиннее короткой short_phrase. И выводит True или False в зависимости от результата сравнения.

long_phrase = 'Насколько проще было бы писать программы, если бы не заказчики'
short_phrase = '640Кб должно хватить для любых задач. Билл Гейтс (по легенде)'

if len(long_phrase) > len(short_phrase):
  print(True)
else:
  print(False)

# Дана строка text. Определите какая из двух букв встречается в нем чаще - 'а' или 'и'.
text = 'Если программист в 9-00 утра на работе, значит, он там и ночевал'
if list(text).count('а') > list(text).count('и'):
  print('Чаще встречается символ "а"')
elif list(text).count('а') < list(text).count('и'):
  print('Чаще встречается символ "и"')
else:
  print('Символы встречаются с одинаковой частотой')

# Дано значение объема файла в байтах. Напишите перевод этого значения в мегабайты в формате:'Объем файла равен 213.68Mb'

kilobytes = input('В функцию подаём размер файла в килобайтах: ')

print('Объем файла равен {}Mb'.format(float(kilobytes) / 1024))

# Выведите на экран значение синуса 30 градусов с помощью метода math.sin.

import math

print(round(math.sin(math.radians(30)), 14))

# В прошлом задании у вас скорее всего не получилось точного значения 0.5 из-за конечной точности вычисления синуса. Но почему некоторые простые операции также могут давать неточный результат? Попробуйте вывести на экран результат операции 0.1 + 0.2. Почему результат неточен?
print(0.1 + 0.2) #проблема конечной точности вычисления чисел с плавающей запятой

# В переменных a и b записаны 2 различных числа. Вам необходимо написать код, который меняет значения a и b местами без использования третьей переменной.

param1 = 1
param2 = 2

param1, param2 = param2, param1
print(param1, param2)


# Дано число в двоичной системе счисления: num=10011. Напишите алгоритм перевода этого числа в привычную нам десятичную систему счисления.

#способ1
binnum = input('Введите число: ')
decnum = 0
for num in binnum:
    decnum = decnum * 2 + int(num)
print (decnum)

#способ2
print(int(binnum, 2))
